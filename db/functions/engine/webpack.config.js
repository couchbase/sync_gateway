/*
Copyright 2022-Present Couchbase, Inc.

Use of this software is governed by the Business Source License included in
the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
file, in accordance with the Business Source License, use of this software will
be governed by the Apache License, Version 2.0, included in the file
licenses/APL2.txt.
*/

const path = require('path');
const webpack = require('webpack');

const isProduction = process.env.NODE_ENV == 'production';

const LicenseComment =
`/*
Copyright 2022-Present Couchbase, Inc.

Use of this software is governed by the Business Source License included in
the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
file, in accordance with the Business Source License, use of this software will
be governed by the Apache License, Version 2.0, included in the file
licenses/APL2.txt.

NOTE: This file was automatically generated by WebPack -- see ../README.md for instructions.
DO NOT EDIT IT.

NOTE: The above copyright notice applies ONLY to the Couchbase source code in this file,
generated from the TypeScript files in ../src, not to the third-party code also included.
*/
`;

const config = {
    entry: './src/api.ts',                          // <-- main module

    output: {
        path: path.resolve(__dirname, 'dist'),      // <-- JS output directory
        library: {
            type: 'var',                            // <-- expose entry point as global var
            name: 'SG_Engine',                      // <-- name of entry point
        },
    },

    module: {
        rules: [
            {
                test: /\.(ts|tsx)$/i,               // Transpile TypeScript to JS
                loader: 'ts-loader',
                exclude: ['/node_modules/'],
            },
        ],
    },

    resolve: {
        extensions: ['.tsx', '.ts', '.jsx', '.js', '...'],

        fallback: {
            // @apollo modules call node.js APIs. Substitute browser-compatible alternatives:
            "assert":   require.resolve("assert/"),
            "console":  require.resolve("console-browserify"),
            "path":     require.resolve("path-browserify"),
            "url":      path.resolve(__dirname, 'polyfill/url.js'),
            "util":     require.resolve("util/"),
            // Omit this module entirely (any calls will throw) but it's never called:
            "fs":       false,
        }
    },

    devtool: 'inline-source-map',           // put JS source map in the code itself

    optimization: {
        // Turn off JS minimization because it strips all comments, including the Couchbase
        // license comment inserted by the BannerPlugin.
        // (It's not important for us anyway: the code isn't being downloaded so the file size
        // doesn't matter, and parsing only happens rarely when a new JS VM is spun up.)
        minimize: false,
    },

    plugins: [
        new webpack.BannerPlugin({
            banner: LicenseComment,         // Prepend the Couchbase license comment
            raw: true,
        })
    ],

    ignoreWarnings: [                       // Suppress Web-specific warnings about big code
        /asset size limit/,
        /entrypoint size limit/,
        /limit the size/,
    ],
};

module.exports = () => {
    if (isProduction) {
        config.mode = 'production';
    } else {
        config.mode = 'development';
    }
    return config;
};
