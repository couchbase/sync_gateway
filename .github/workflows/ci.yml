# Copyright 2021-Present Couchbase, Inc.
#
# Use of this software is governed by the Business Source License included in
# the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
# file, in accordance with the Business Source License, use of this software
# will be governed by the Apache License, Version 2.0, included in the file
# licenses/APL2.txt.

name: ci

on:
  push:
    branches: 
      - 'master'
      - 'release/*'
      - 'CBG*'
      - 'ci-*'
  pull_request:
    branches:
      - 'master'
      - 'release/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.5
      - uses: actions/checkout@v2
      - name: gofmt
        run: |
          gofmt -d -e . | tee gofmt.out
          test -z "$(cat gofmt.out)"
      - name: vet
        run: go vet "./..."
      - name: go-build
        run: go build "./..."

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    env:
      GOPRIVATE: github.com/couchbaselabs
      MallocNanoZone: 0
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.5
      - uses: actions/checkout@v2
      - name: Build
        run: go build -v "./..."
      - name: Run Tests
        run: go test -timeout=30m -count=1 -json -v "./..." | tee test.json | jq -s -jr 'sort_by(.Package,.Time) | .[].Output | select (. != null )'
        shell: bash
      - name: Annotate Failures
        if: always()
        uses: IsaacLambat/golang-test-annotations@v0.6.2
        with:
          test-results: test.json

  test-race:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/couchbaselabs
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.5
      - uses: actions/checkout@v2
      - name: Run Tests
        run: go test -race -timeout=30m -count=1 -json -v "./..." | tee test.json | jq -s -jr 'sort_by(.Package,.Time) | .[].Output | select (. != null )'
        shell: bash
      - name: Annotate Failures
        if: always()
        uses: IsaacLambat/golang-test-annotations@v0.6.2
        with:
          test-results: test.json
