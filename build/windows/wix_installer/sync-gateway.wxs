<?xml version='1.0' encoding='Windows-1252'?>
<Wix xmlns='http://schemas.microsoft.com/wix/2006/wi'
     xmlns:util='http://schemas.microsoft.com/wix/UtilExtension'>

  <?include $(sys.CURRENTDIR)\Config.wxi?>
  <Product Id="*" Name="$(var.Company) $(var.DisplayName)" Version="$(var.Version)" Manufacturer="Couchbase Inc."
      UpgradeCode="$(var.UpgradeCodeID)"
      Language="1033" Codepage="1252">

    <Package Id="*" Keywords="Installer" Description="$(var.Company) $(var.DisplayName) $(var.Version) Installer"
        Comments="Couchbase is a registered trademark of Couchbase Inc."
        Manufacturer="Couchbase Inc."
        Platform="x64"
        InstallerVersion="500" Languages="1033" Compressed="yes" SummaryCodepage="1252"/>

    <MediaTemplate EmbedCab="yes"/>

    <!-- Check if SGW 1.x previously install -->
    <Property Id="SYNC_GATEWAY_NAME_1X_EXISTS">
        <RegistrySearch Id="Sync_Gateway_name_1X_exist"
                  Root="HKLM"
                  Key="SOFTWARE\Classes\Installer\Products\75E3CA1D72467484D8075AB630073F8A"
                  Name="ProductName"
                  Type="raw" />
    </Property>
    <!-- option to bypass check of previous version of SGW installation -->
    <Property Id="IGNORE_SGW1X_CHECK" Value="false"/>
    <!-- Proceed with the installation IF (the product is already installed, OR the user asked us not to check for SGW 1.x, OR SGW 1.x isn't installed)-->
     <Condition Message="An older version of Couchbase Sync Gateway has been detected on your computer. To complete the installation of this version, please uninstall your older version before you continue.">Installed OR IGNORE_SGW1X_CHECK = "true" OR NOT SYNC_GATEWAY_NAME_1X_EXISTS
    </Condition>

    <!-- Enable Windows Installer "major upgrade", the uninstall/install kind. -->
    <!-- The Schedule attribute specifies where RemoveExistingProducts will go; -->
    <!-- see https://msdn.microsoft.com/library/aa371197.aspx for details. -->
    <!-- afterInstallExecute seems to be most efficient and also (probably?) -->
    <!-- allows for user-modified config files to remain. -->
    <MajorUpgrade Schedule="afterInstallExecute"
        DowngradeErrorMessage="A later version of $(var.Company) $(var.DisplayName) is already installed. Setup will now exit."/>
    <!-- Store the installation directory so upgrades can re-use it -->
    <SetProperty Id="ARPINSTALLLOCATION" Value="[INSTALLDIR]" After="CostFinalize" Sequence="execute"/>

    <!-- Directory layout -->
    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="ProgramFiles64Folder" Name="PFiles">
        <Directory Id="$(var.Company)" Name="$(var.Company)">
          <Directory Id="INSTALLDIR" Name="$(var.DisplayName)">
            <!-- Contents of this directory generated by heat in Files.wxs -->
            <Directory Id="SGWLogDirectory"/>
            <Directory Id="ServiceSGWComponent"/>
          </Directory>
        </Directory>
      </Directory>
      <!-- Additional directory reference for the Desktop folder. -->
      <!-- Wix defines the value of this directory for us, but we have -->
      <!-- to "declare" it here in order to reference it later. -->
      <Directory Id="DesktopFolder"/>
    </Directory>

    <Feature Id="Complete" Level="1" Title="Couchbase Server" Description="The Complete Package."
        ConfigurableDirectory="INSTALLDIR">
      <ComponentGroupRef Id="SyncGateway"/>
      <ComponentRef Id="CreateLogFolder"/>
      <ComponentRef Id="SGW_WindowService"/>
      <ComponentRef Id="Shortcuts"/>
    </Feature>

    <!-- Desktop shortcut -->
    <SetProperty Id="CONSOLEURL" Value="http://127.0.0.1:4985/" Sequence="execute" Before="CreateShortcuts"/>
    <DirectoryRef Id="DesktopFolder">
      <Component Id="Shortcuts" Guid="1d9bf2ba-19fc-4bc5-a393-6f421449c8e1">
        <RegistryValue Root="HKCU" Key="Software\$(var.Company)\$(var.DisplayName)" Name="shortcut" Type="integer" Value="1" KeyPath="yes"/>
        <Shortcut Id="ConsoleShortcut"
          Name="$(var.Company) $(var.DisplayName) Console"
          Description="$(var.Company) $(var.DisplayName) Console"
          Target="[CONSOLEURL]"
          Icon="CouchbaseIcon"/>
      </Component>
    </DirectoryRef>

    <!-- Install SGW window service -->
    <!-- sync-gateway service with auto start on install -->
    <DirectoryRef Id="ServiceSGWComponent">
        <Component Id="SGW_WindowService" Guid="68a8298e-2116-4bd0-95ec-938c07dfdb4d">
          <File Id="sg_service_exe"
                Name="$(var.WinServiceApp)"
                KeyPath="yes"
                Source="$(var.WinServiceApp)"/>
          <ServiceInstall
                   Id="install_SGWService"
                   Name="$(var.Name)"
                   DisplayName="$(var.Company) $(var.DisplayName)"
                   Description="$(var.Description)"
                   Start="$(var.WinServiceControl)"
                   Account="LocalSystem"
                   ErrorControl="normal"
                   Interactive="no"
                   Type="ownProcess"
                   Arguments='start "[INSTALLDIR]$(var.WinSGWEXE)" "[INSTALLDIR]$(var.WinServiceConfig)" "[INSTALLDIR]var\lib\couchbase\logs\sync_gateway_error.log" '
                   Vital="yes">
          </ServiceInstall>

        <?if $(var.ProductName) = "sync-gateway" ?>
          <ServiceControl Id="sc_SGWService" Start="install" Stop="both" Remove="uninstall" Name="SyncGateway" Wait="yes">
          </ServiceControl>
        <?else?>
          <ServiceControl Id="sc_SGWService" Stop="both" Remove="uninstall" Name="SGAccel" Wait="yes">
          </ServiceControl>
        <?endif?>
        </Component>
    </DirectoryRef>

    <!-- Create SGW required var\lib\couchbase\logs -->
    <DirectoryRef Id="SGWLogDirectory">
        <Directory Id="SGW_VAR" Name="var">
          <Directory Id="SGW_LIB" Name="lib">
            <Directory Id="SGW_COUCHBASE" Name="couchbase">
              <Directory Id="SGW_LOGS" Name="logs">
              <Component Id="CreateLogFolder" Guid="161335d7-6bf2-42e2-a5f4-f7c2a4eac4c5">
              <CreateFolder>
                <util:PermissionEx User="Users" GenericAll="yes" />
              </CreateFolder>
            </Component>
          </Directory>
        </Directory>
      </Directory>
      </Directory>
    </DirectoryRef>

    <!-- See MB-24192. -->
    <Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable"/>

    <InstallExecuteSequence>
    </InstallExecuteSequence>

    <!-- User Interface stuff below -->

    <!-- Icon for Add/Remove dialog -->
    <Icon Id="CouchbaseIcon" SourceFile="$(sys.CURRENTDIR)\assets\couchbase.ico"/>
    <Property Id="ARPPRODUCTICON" Value="CouchbaseIcon" />
    <Property Id="ARPURLINFOABOUT" Value="http://www.couchbase.com/"/>

    <!-- Graphics for installer itself -->
    <WixVariable Id="WixUIDialogBmp" Value="$(sys.CURRENTDIR)\assets\cb_installer_bg.jpg"/>
    <WixVariable Id="WixUIBannerBmp" Value="$(sys.CURRENTDIR)\assets\cb_installer_banner.jpg"/>
    <WixVariable Id="WixUILicenseRtf" Value="License.rtf"/>

    <!-- Text message for exit dialog -->
    <Property Id="WIXUI_EXITDIALOGOPTIONALTEXT" Value="$(var.Company) $(var.DisplayName) is installed. Visit http://127.0.0.1:4985/ to configure the service. Please note it may take a few moments for the console to become available." />

    <!-- Finally load our custom UI sequence -->
    <UIRef Id="WixUI_InstallDir" />
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />

  </Product>
</Wix>
