# Copyright 2022-Present Couchbase, Inc.
#
# Use of this software is governed by the Business Source License included
# in the file licenses/BSL-Couchbase.txt.  As of the Change Date specified
# in that file, in accordance with the Business Source License, use of this
# software will be governed by the Apache License, Version 2.0, included in
# the file licenses/APL2.txt.
parameters:
  - $ref: ../../components/parameters.yaml#/db
get:
  summary: Get information about the current user
  description: This will get the information about the current user.
  responses:
    "200":
      $ref: ../../components/responses.yaml#/User-session-information
    "401":
      $ref: ../../components/responses.yaml#/Unauthorized
  tags:
    - Session
  operationId: get_db-_session
post:
  summary: Create a new user session
  description: |-
    Generates a login session for the user based on the credentials provided in the request body or if that fails (due to invalid credentials or none provided at all), generates the new session for the currently authenticated user instead. On a successful session creation, a session cookie is stored to keep the user authenticated for future API calls.

    If `Origin` header is passed to this endpoint, the `Origin` header must match both the `cors.login_origin` and `cors.origin` configuration options.
  parameters:
    - name: one_time
      description: Sets the session to only be valid for a single authentication. This session will expire in 5 minutes if not used.
      in: query
      schema:
        type: boolean
  requestBody:
    description: When name and password are included in the request body, the session will be created for the specified user.  Otherwise the session will be created for the authenticated user making the request.
    required: false
    content:
      application/json:
        schema:
          type: object
          title: "User Credentials"
          properties:
            name:
              description: User name to generate the session for. Omit this value to generate a session for the authenticated user.
              type: string
            password:
              description: Password of the user to generate the session for. Omit this value to generate a session for the authenticated user.
              type: string
  responses:
    '200':
      description: Session created successfully. Returned body is dependant on if using Public or Admin APIs
      content:
        application/json:
          schema:
            allOf:
              - $ref: ../../components/schemas.yaml#/User-session-information
              - type: object
                properties:
                  one_time_session_id:
                    description: The id of a single use session if `one_time=true` query parameter was used.
                    type: string
                    example: c5af80a039db4ed9d2b6865576b6999935282689
    "400":
      $ref: ../../components/responses.yaml#/Invalid-CORS-LoginOrigin
    "401":
      $ref: ../../components/responses.yaml#/Unauthorized
  tags:
    - Session
  operationId: post_db-_session
delete:
  summary: Log out
  description: |-
    Invalidates the session for the currently authenticated user and removes their session cookie.

    If `Origin` header is passed to this endpoint, the `Origin` header must match both the `cors.login_origin` and `cors.origin` configuration options.
  responses:
    "200":
      description: Successfully removed session (logged out)
    "400":
      $ref: ../../components/responses.yaml#/Invalid-CORS-LoginOrigin
    "401":
      $ref: ../../components/responses.yaml#/Unauthorized
    "404":
      description: Return if session not found.
      content:
        application/json:
          schema:
            $ref: ../../components/schemas.yaml#/HTTP-Error
          example:
            error: not_found
            reason: no session

  tags:
    - Session
  operationId: delete_db-_session
