# Copyright 2021-Present Couchbase, Inc.
#
# Use of this software is governed by the Business Source License included in
# the file licenses/BSL-Couchbase.txt.  As of the Change Date specified in that
# file, in accordance with the Business Source License, use of this software
# will be governed by the Apache License, Version 2.0, included in the file
# licenses/APL2.txt.

name: ci

on:
  push:
    branches:
      - 'master'
      - 'main'
      - 'release/*'
      - 'feature/*'
      - 'beryllium'
      - 'CBG*'
      - 'ci-*'
  pull_request:
    branches:
      - 'master'
      - 'main'
      - 'release/*'
      - 'beryllium'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'release/')}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.3
      - name: go-build
        run: go build "./..."

  addlicense:
    name: addlicense
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.3
      - run: go install github.com/google/addlicense@latest
      - run: addlicense -check -f licenses/addlicense.tmpl .

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.61.0
          args: --config=.golangci-strict.yml

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            name: macos
          - os: windows-latest
            name: windows
          - os: ubuntu-latest
            name: ubuntu
    env:
      GOPRIVATE: github.com/couchbaselabs
      MallocNanoZone: 0
    name: test (${{ matrix.name }})
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.3
      - name: Build
        run: go build -v "./..."
      - name: Run Tests
        run: go test -tags cb_sg_devmode -shuffle=on -timeout=30m -count=1 -json -v "./..." | tee test.json | jq -s -jr 'sort_by(.Package,.Time) | .[].Output | select (. != null )'
        shell: bash
      - name: Annotate Failures
        if: always()
        uses: guyarb/golang-test-annotations@v0.8.0
        with:
          test-results: test.json

  test-race:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/couchbaselabs
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.3
      - name: Run Tests
        run: go test -tags cb_sg_devmode -race -shuffle=on -timeout=30m -count=1 -json -v "./..." | tee test.json | jq -s -jr 'sort_by(.Package,.Time) | .[].Output | select (. != null )'
        shell: bash
      - name: Annotate Failures
        if: always()
        uses: guyarb/golang-test-annotations@v0.8.0
        with:
          test-results: test.json

  test-default-collection:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/couchbaselabs
      SG_TEST_USE_DEFAULT_COLLECTION: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.3
      - name: Run Tests
        run: go test -tags cb_sg_devmode -shuffle=on -timeout=30m -count=1 -json -v "./..." | tee test.json | jq -s -jr 'sort_by(.Package,.Time) | .[].Output | select (. != null )'
        shell: bash
      - name: Annotate Failures
        if: always()
        uses: guyarb/golang-test-annotations@v0.8.0
        with:
          test-results: test.json

  python-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
        with:
          args: 'format --check'
  python-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
  test-sgcollect:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-github-actions-annotate-failures pytest-httpserver trustme
      - name: Run test
        run: |
          pytest

  test-stats-definition-exporter:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.3
      - name: Build
        run: go build -v "./tools/stats-definition-exporter"
      - name: Run Tests
        run: go test -shuffle=on -timeout=5m -count=1 -json -v "./tools/stats-definition-exporter" | tee test.json | jq -s -jr 'sort_by(.Package,.Time) | .[].Output | select (. != null )'
        shell: bash
